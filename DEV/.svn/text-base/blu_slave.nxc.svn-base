//Slave
#include "DrivingControl.nxc"
#define BT_CONN 1
#define OUT_MBOX 1
#define IN_MBOX 5
#define CLEARLINE(L) TextOut(0,L,"                            ")

mutex Mutex_Motor;


//checks the bluetooth connection
void BTCheck(int conn)
{
 byte e;
 e = BluetoothStatus(conn);
 CLEARLINE(LCD_LINE8);
 while(true)
 {
  if (e == NO_ERR)
  {
   break;
  }
  else if(e == STAT_COMM_PENDING)
  {
   TextOut(0,LCD_LINE8,"PENDING");
   continue;
  }
  else if(e ==  ERR_COMM_CHAN_NOT_READY)
  {
   TextOut(0,LCD_LINE8,"UNCONNECTED");
   Stop(true);
  }
  else if(e == ERR_COMM_BUS_ERR)
  {
   TextOut(0,LCD_LINE8,"BUS ERROR");
   Stop(true);
  }
 }
}

task BT();

task main();

task main()
{
 start BT;
}

//if a message is collected from the Brick, send an ACK, and take appropriate turn or 
//drive action based on the message.
task BT()
{
 bool drive_state = true;
 CLEARLINE(LCD_LINE0);
 TextOut(0,LCD_LINE0,"STATE: DRIVE");
 int in;
 BTCheck(0);
 CLEARLINE(LCD_LINE8);
 TextOut(0,LCD_LINE8,"SLAVE RECEIVING");
 SendResponseNumber(OUT_MBOX,0xFF);
 while(true)
 {
  if (ReceiveRemoteNumber(IN_MBOX,true,in) != STAT_MSG_EMPTY_MAILBOX)
  {
   if (in == BTNCENTER)
   {
    if (drive_state == true)
    {
      drive_state = false;
      CLEARLINE(LCD_LINE0);
      TextOut(0,LCD_LINE0,"STATE: TURN");
    }
    else if (drive_state == false)
    {
      drive_state = true;
      CLEARLINE(LCD_LINE0);
      TextOut(0,LCD_LINE0,"STATE: DRIVE");
    }
   }
   else if(in == BTNRIGHT)
   {
    if (drive_state == true)
    {
      drive(2);
    }
    else if(drive_state == false)
    {
      turnWheelsTo(2);
    }
   }
   
   else if(in == BTNLEFT)
   {
    if (drive_state == true)
    {
      drive(-2);
    }
    else if (drive_state == false)
    {
      turnWheelsTo(-2);
    }
   }
   SendResponseNumber(OUT_MBOX,0xFF);
  }
  Wait(100);
 }
}

